{"version":3,"sources":["components/sidenav/Sidenav.js","models/GiftCard.js","services/GiftCardService.js","models/SidenavAction.js","services/SidenavActionsService.js","services/NavigationService.js","components/home-page/HomePage.js","components/buy-card/BuyCard.js","routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["Sidenav","className","GiftCard","avatarIcon","icon","label","price","min","max","this","headerIcon","setCards","giftCardsLabels","giftCardsIcons","giftCardsBgIcons","map","giftCardsPrices","giftCards","Array","fill","card","index","cardName","getAppleCard","getNetflixCard","getAmazonCard","getPrimeNowCard","SidenavAction","active","setActions","icons","actions","setActive","props","setHistory","history","setMatch","match","paramKey","params","hasParam","path","push","window","location","href","navigateTo","HomePage","NavigationService","setRouteInfo","Fragment","heading","GiftCardGallery","GiftCardService","React","Component","PageHeader","getCard","bgIcon","key","performance","now","onClick","navigateToBuyCard","getPrice","SidenavActions","data-active","SidenavActionsService","action","getAction","getActions","BestSellerCard","ExpandedGiftCard","data-card-name","getPriceRange","BuyCard","state","loading","setState","getParam","navigateToHomePage","goToHomePage","Cart","cardsCount","selectedStore","price_of_one_card","total_amount","getAmount","Number","toFixed","store","data-selected","src","alt","aria-label","getCartPrice","data-card","ApplicationRoutes","exact","component","to","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a31db6fb.chunk.js","sourcesContent":["import React from 'react';\nimport './Sidenav.css';\n\nexport default function Sidenav(){\n\n    return(\n        <div className=\"Sidenav positionAbsolute\"></div>\n    );\n\n}","export default class GiftCard{\n\n    label;\n    headerIcon;\n    avatarIcon;\n    price;\n    min;\n    max;\n    \n\n    constructor(avatarIcon, icon, label, price, min, max){\n        this.avatarIcon = avatarIcon;\n        this.headerIcon = icon;\n        this.label = label;\n        this.price = price;\n        this.min = min;\n        this.max = max;\n    }\n\n    getPrice(){\n        return `$${this.price}`;\n    }\n\n    getPriceRange(){\n        return `$${this.min} - $${this.max}`;\n    }\n}","import GiftCard from '../models/GiftCard';\n\nclass GiftCardService{\n    \n    giftCards;\n    \n    constructor(){\n        this.setCards();\n    }\n\n    setCards(){\n        let giftCardsLabels = [\"iTunes\", \"Netflix\", \"Amazon\", \"Amazon\"];\n        let giftCardsIcons = [\"apple\", \"netflix\", \"amazon\", \"amazon\"];\n        let giftCardsBgIcons = giftCardsIcons.map(icon => `/logos/${icon}.svg`);\n        giftCardsIcons = giftCardsIcons.map(icon => `ri-${icon}-fill`);\n\n        let giftCardsPrices = [100, 100, 200, 100];\n        let giftCards = new Array(3).fill(1);\n        giftCards = giftCards.map((card, index) => index);\n        this.giftCards = giftCards.map(card => new GiftCard(\n            giftCardsBgIcons[card], giftCardsIcons[card], \n            giftCardsLabels[card], giftCardsPrices[card],\n            10, giftCardsPrices[card]\n        ));\n    }\n\n    getAppleCard(){\n        return new GiftCard(\n            \"/logos/apple.svg\", \"ri-apple-fill\",\n            \"iTunes\", \"100\", \"10\", \"100\"\n        );\n    }\n\n    getNetflixCard(){\n        return new GiftCard(\n            \"/logos/netflix.svg\", \"ri-netflix-fill\",\n            \"Netflix\", \"200\", \"10\", \"200\"\n        );\n    }\n\n    getAmazonCard(){\n        return new GiftCard(\n            \"/logos/amazon.svg\", \"ri-amazon-fill\",\n            \"Amazon\", \"100\", \"10\", \"100\"\n        );\n    }\n\n    getPrimeNowCard(){\n        return new GiftCard(\n            \"/logos/amazon.svg\", \"ri-amazon-fill\",\n            \"Amazon\", \"100\", \"10\", \"100\"\n        );\n    }\n\n    getCard(cardName){\n        if(cardName === 'iTunes'){\n            return this.getAppleCard()\n        }else if(cardName === 'Netflix'){\n            return this.getNetflixCard()\n        }else if(cardName === 'Amazon'){\n            return this.getAmazonCard()\n        }else if(cardName === 'Prime'){\n            return this.getPrimeNowCard()\n        }\n    }\n\n}\n\nexport default new GiftCardService();","export default class SidenavAction{\n    \n    icon;\n    active;\n\n\n    constructor(icon, active){\n        this.icon = icon;\n        this.active = active;\n    }\n\n    setActive(active){\n        this.active = active;\n    }\n\n}","import SidenavAction from \"../models/SidenavAction\";\n\nclass SidenavActionsService{\n    actions;\n\n    constructor(){\n        this.setActions();\n    }\n\n    setActions(){\n        let labels = [\"Cards\", \"Sale\", \"Groups\", \"Settings\"];\n        let icons = [\"bank-card-2\", \"service\", \"group\", \"settings-2\"];\n        icons = icons.map(icon => `ri-${icon}-fill`);\n        this.actions = labels.map((label, index) => new SidenavAction(icons[index], false));\n        this.actions[0].setActive(true);\n    }\n\n}\n\nexport default new SidenavActionsService();","class NavigationService{\n    history;\n    match;\n\n    setRouteInfo(props){\n        this.setHistory(props.history);\n        this.setMatch(props.match);\n    }\n    \n    setHistory(history){\n        this.history = history;\n    }\n\n    setMatch(match){\n        this.match = match;\n    }\n\n    hasParam(paramKey){\n        return (this.match !== void 0 && paramKey in this.match.params);\n    }\n\n    getParam(paramKey){\n        if(this.hasParam(paramKey)){\n            return this.match.params[paramKey];\n        }\n    }\n\n    navigateTo(path){\n        if(\"history\" in this){\n            this.history.push(path);\n        }else{\n            window.location.href = path;\n        }\n    }\n\n    navigateToHomePage(){\n        this.navigateTo(\"/\");\n    }\n\n    navigateToBuyCard(cardName){\n        let path = `/buy/card/${cardName}`;\n        this.navigateTo(path);\n    }\n}\n\nexport default new NavigationService();","import React from 'react';\nimport './HomePage.css';\n\nimport Sidenav from '../sidenav/Sidenav';\nimport GiftCardService from '../../services/GiftCardService';\nimport SidenavActionsService from '../../services/SidenavActionsService';\nimport NavigationService from '../../services/NavigationService';\n\nexport default class HomePage extends React.Component{\n    \n    componentDidMount(){\n        NavigationService.setRouteInfo(this.props);\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <Sidenav />\n                <div className=\"HomePage\">\n                    <PageHeader heading=\"Gift cards\" />\n                    <GiftCardGallery />\n                    <div className=\"row\">\n                        <SidenavActions />\n                        <BestSellerCard card={GiftCardService.getNetflixCard()} />\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nclass PageHeader extends React.Component{\n    \n    render(){\n        return(\n            <div className=\"PageHeader row centerV\">\n                <div className=\"heading\">{this.props.heading}</div>\n                <div className=\"fillParent\"></div>\n                <i className=\"ri-home-smile-fill\"></i>\n            </div>\n        );\n    }\n\n}\n\n\n\n\n/**\n * This  Component is used to render the Gift Cards Gallery\n * on Home Page of the app\n */\n\nfunction GiftCardGallery(){\n\n    function buyCard(cardName){\n        NavigationService.navigateToBuyCard(cardName.label);\n    }\n\n    function getCard(bgIcon, avatarIcon, label, price){\n        return (\n            <div className=\"Card column centerH positionRelatve\" \n                key={performance.now()} onClick={() => buyCard({label})}>\n                {/* <div className=\"positionAbsolute\">\n                    <img src=\"logos/apple.svg\" alt=\"brand-icon\" aria-label=\"brand icon of gift card\"/>\n                </div> */}\n                <i className={avatarIcon}></i>\n                <div className=\"label positionRelative\">{label}</div>\n                <div className=\"price positionRelative\">{price}</div>\n            </div>\n        );\n    }\n\n    function getGiftCards(){\n        let giftCards = GiftCardService.giftCards;\n        return giftCards.map(card => getCard(\n            card.avatarIcon, card.headerIcon, \n            card.label, card.getPrice()\n        ));\n    }\n\n    return(\n        <div className=\"CardGallery\">\n            <div className=\"row centerV\">\n                <div className=\"heading\">Featured Gift cards</div>\n                {getGiftCards()}\n            </div>\n            <div className=\"navigator row centerV\">\n                <div className=\"separator\"></div>\n                <i className=\"ri-arrow-left-line\"></i>\n                <i className=\"ri-arrow-right-line\"></i>\n            </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n/**\n * This Component is used ot render Sidenav actions on the Home Page\n * of the app\n */\n\nclass SidenavActions extends React.Component{\n    \n    getAction(icon, active){\n        return (\n            <div className=\"action positionRelative\" data-active={active} key={performance.now()}>\n                <i className={icon}></i>\n            </div>\n        );\n    }\n\n    getActions(){\n        return SidenavActionsService.actions.map(action => this.getAction(action.icon, action.active));\n    }\n    \n    render(){\n        return (\n            <div className=\"SidenavActions\">\n                {this.getActions()}\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n\n\n/**\n * This Component is used to render Best Seller \n * card on the homepage of the app\n */\n\nclass BestSellerCard extends React.Component{\n    render(){\n        return(\n            <div className=\"BestSellerCard positionRelative\">\n                <div className=\"heading\">Best seller</div>\n                <ExpandedGiftCard card={this.props.card} />\n            </div>\n        )\n    }\n}\n\nexport class ExpandedGiftCard extends React.Component{\n    render(){\n        let card = this.props.card;\n        \n        return (\n            <div className=\"GiftCard positionRelative\" data-card-name={card.label}>\n                <div className=\"headerIcon\"><i className={card.headerIcon}></i></div>\n                <div className=\"label\">{card.label}</div>\n                <div className=\"price positionRelative\">{card.getPriceRange()}</div>\n            </div>\n        );\n    }\n} ","import React from 'react';\n\nimport './BuyCard.css';\n\nimport NavigationService from '../../services/NavigationService';\nimport GiftCardService from '../../services/GiftCardService';\nimport {ExpandedGiftCard} from '../home-page/HomePage';\n\nexport default class BuyCard extends React.Component{\n\n    state = {loading: true, cardName: null};\n\n    componentDidMount(){\n        NavigationService.setRouteInfo(this.props);\n        this.setState({cardName: NavigationService.getParam(\"cardName\")});\n        this.setState({loading: false});\n    }\n\n    goToHomePage(){\n        NavigationService.navigateToHomePage();\n    }\n\n    render(){\n        let loading = this.state.loading;\n        if(loading) return('');\n\n        let cardName = this.state.cardName;\n        let card = GiftCardService.getCard(cardName);\n        return(\n            <div className=\"BuyCard\">\n                <div className=\"row centerV header\">\n                    <i className=\"ri-close-line\" onClick={this.goToHomePage}></i>\n                    <div className=\"fillParent\"></div>\n                    <div className=\"heading\">Buy gift cards</div>\n                </div>\n                <ExpandedGiftCard card={card} />\n                <Cart card={card} />\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\n\nclass Cart extends React.Component{\n\n    state = {loading: true, cardsCount: 1, card: null, selectedStore: null};\n\n    componentDidMount(){\n        this.setState({card: this.props.card});\n        this.setState({loading: false});\n    }\n\n    getAmount(){\n        let price_of_one_card = this.state.card.price;\n        return (this.state.cardsCount * price_of_one_card);\n    }\n\n    getCartPrice(){\n        let total_amount = this.getAmount();\n        return Number(total_amount * 1.045).toFixed(1);\n    }\n\n    getStore(store, selectedStore){\n        return (\n            <div className=\"store\" data-selected={store === selectedStore} key={performance.now()}>\n                <img src={store} alt=\"country_store\" aria-label=\"select country for subscription\"/>\n            </div>\n        );\n    }\n\n    render(){\n        let loading = this.state.loading;\n        // let selectedStore = this.state.selectedStore;\n        // let stores = [\"us\", \"uk\", \"au\"];\n        // stores = stores.map(store => `flags/${store}.svg`);\n\n        if(loading) return(<div className=\"Cart\">loading cart ...</div>);\n\n        let cardName = this.props.card.label;\n\n        return(\n            <div className=\"Cart\">\n                <div className=\"row centerV\">\n                    <div className=\"heading\">Select options</div>\n                    <div className=\"CartOptions\">\n\n                        <div className=\"heading\">Select size</div>\n                        <div className=\"row centerV SelectCardCount\">\n                            <div className=\"button\"><i className=\"ri-subtract-line\"></i></div>\n                            <div className=\"amount\">{'$' + this.getAmount()}</div>\n                            <div className=\"button\"><i className=\"ri-add-line\"></i></div>\n                        </div>\n                        <div className=\"heading\">Select store</div>\n                        <div className=\"row Stores\">\n                            {/* {stores.map(store => this.getStore(store, selectedStore))} */}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"CartSummary\">\n                    <div className=\"row centerV\">\n                        <div className=\"CartPrice\">\n                            <div className=\"heading\">Cart value</div>\n                            <div className=\"amount\">{'$' + this.getCartPrice()}</div>\n                        </div>\n                        <div className=\"fillParent\"></div>\n                        <div className=\"Button\" data-card={cardName}>Add to cart</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport HomePage from '../components/home-page/HomePage';\nimport BuyCard from '../components/buy-card/BuyCard';\n\nexport default function ApplicationRoutes(){\n    return(\n        <Switch>\n            <Route exact path=\"/\" component={HomePage}></Route>\n            <Route exact path=\"/buy/card/:cardName\" component={BuyCard}></Route>\n            <Redirect to=\"/\" />\n        </Switch>\n    );\n}","import React from 'react';\nimport './App.css';\n\nimport ApplicationRoutes from './routes/Routes';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nexport default class App extends React.Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n            <ApplicationRoutes></ApplicationRoutes>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts.css';\nimport App from './App';\nimport 'remixicon/fonts/remixicon.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}